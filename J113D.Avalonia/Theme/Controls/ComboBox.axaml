<ResourceDictionary xmlns="https://github.com/avaloniaui"
				   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
				   xmlns:sys="using:System"
				   x:ClassModifier="internal">

	<Design.PreviewWith>
		<Grid ColumnDefinitions="*,*">
			<ThemeVariantScope RequestedThemeVariant="Light">
				<Border Padding="20" Background="{DynamicResource BackgroundColor1}">
					<StackPanel Spacing="10">
						<ComboBox PlaceholderText="Select an item">
							<ComboBoxItem>Item 1</ComboBoxItem>
							<ComboBoxItem>Item 2</ComboBoxItem>
						</ComboBox>
						<ComboBox IsEnabled="False"
								  Width="200"
								  SelectedIndex="1"
								  HorizontalContentAlignment="Center">
							<ComboBoxItem>Item 1</ComboBoxItem>
							<ComboBoxItem>Item 2</ComboBoxItem>
						</ComboBox>
						<ComboBox PlaceholderText="Error">
							<DataValidationErrors.Error>
								<sys:Exception>
									<x:Arguments>
										<x:String>Error</x:String>
									</x:Arguments>
								</sys:Exception>
							</DataValidationErrors.Error>
						</ComboBox>
					</StackPanel>
				</Border>
			</ThemeVariantScope>

			<ThemeVariantScope RequestedThemeVariant="Dark" Grid.Column="1">
				<Border Padding="20" Background="{DynamicResource BackgroundColor1}">
					<StackPanel Spacing="10">
						<ComboBox PlaceholderText="Select an item">
							<ComboBoxItem>Item 1</ComboBoxItem>
							<ComboBoxItem>Item 2</ComboBoxItem>
						</ComboBox>
						<ComboBox IsEnabled="False"
								  Width="200"
								  SelectedIndex="1"
								  HorizontalContentAlignment="Center">
							<ComboBoxItem>Item 1</ComboBoxItem>
							<ComboBoxItem>Item 2</ComboBoxItem>
						</ComboBox>
						<ComboBox PlaceholderText="Error">
							<DataValidationErrors.Error>
								<sys:Exception>
									<x:Arguments>
										<x:String>Error</x:String>
									</x:Arguments>
								</sys:Exception>
							</DataValidationErrors.Error>
						</ComboBox>
					</StackPanel>
				</Border>
			</ThemeVariantScope>
		</Grid>
	</Design.PreviewWith>

	<ControlTheme x:Key="{x:Type ComboBox}" TargetType="ComboBox">
		<Setter Property="Padding" Value="6,5,0,7" />
		<Setter Property="MaxDropDownHeight" Value="504" />
		<Setter Property="Background" Value="{DynamicResource FieldColor}" />
		<Setter Property="BorderBrush" Value="{DynamicResource DefaultColor}" />
		<Setter Property="CornerRadius" Value="2" />

		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="MinHeight" Value="32" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="PlaceholderForeground" Value="{DynamicResource ForegroundColor3}" />

		<Setter Property="Template">
			<ControlTemplate>
				<DataValidationErrors>
					<Grid ColumnDefinitions="*,32">
						<Border
							x:Name="Background"
							Grid.Column="0"
							Grid.ColumnSpan="2"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="{TemplateBinding CornerRadius}"
							MinWidth="64" />
						
						<TextBlock
							x:Name="PlaceholderTextBlock"
							Grid.Column="0"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Margin="{TemplateBinding Padding}"
							Text="{TemplateBinding PlaceholderText}"
							Foreground="{TemplateBinding PlaceholderForeground}"
							IsVisible="{TemplateBinding SelectionBoxItem, Converter={x:Static ObjectConverters.IsNull}}" />

						<ContentControl
							x:Name="ContentPresenter"
							Content="{TemplateBinding SelectionBoxItem}"
							Grid.Column="0"
							Margin="{TemplateBinding Padding}"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
						</ContentControl>

						<Border
							x:Name="DropDownOverlay"
							Grid.Column="1"
							Background="Transparent"
							Margin="0,1,1,1"
							Width="30"
							IsVisible="False"
							HorizontalAlignment="Right" />

						<PathIcon
							x:Name="DropDownGlyph"
							Grid.Column="1"
							UseLayoutRounding="False"
							IsHitTestVisible="False"
							Height="12"
							Width="12"
							Margin="0,0,10,0"
							HorizontalAlignment="Right"
							VerticalAlignment="Center"
							Foreground="{DynamicResource ForegroundColor2}"
							Data="M1939 486L2029 576L1024 1581L19 576L109 486L1024 1401L1939 486Z"/>

						<Popup
							Name="PART_Popup"
							WindowManagerAddShadowHint="False"
							IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
							MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
							MaxHeight="{TemplateBinding MaxDropDownHeight}"
							PlacementTarget="Background"
							IsLightDismissEnabled="True"
							InheritsTransform="True">

							<Border
								x:Name="PopupBorder"
								Background="{DynamicResource BackgroundColor2}"
								BorderBrush="{DynamicResource BorderColor2}"
								BorderThickness="1"
								HorizontalAlignment="Stretch"
								CornerRadius="2">

								<ScrollViewer
									HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
									VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
									IsDeferredScrollingEnabled="{TemplateBinding (ScrollViewer.IsDeferredScrollingEnabled)}">

									<ItemsPresenter
										Name="PART_ItemsPresenter"
										ItemsPanel="{TemplateBinding ItemsPanel}" />
								</ScrollViewer>
							</Border>
						</Popup>
					</Grid>
				</DataValidationErrors>
			</ControlTemplate>
		</Setter>

		<!--  PointerOver State  -->
		<Style Selector="^:pointerover">
			<Setter Property="Background" Value="{DynamicResource HighlightedFieldColor}" />
			<Setter Property="BorderBrush" Value="{DynamicResource HighlightedColor}" />
			<Setter Property="BorderThickness" Value="1" />
		</Style>

		<!--  Pressed State  -->
		<Style Selector="^:pressed">
			<Setter Property="Background" Value="{DynamicResource FieldColor}" />
			<Setter Property="BorderBrush" Value="{DynamicResource PressedColor}" />
		</Style>

		<!-- Error State -->
		<Style Selector="^:error">
			<Setter Property="BorderBrush" Value="{DynamicResource RedColor}" />
			<Setter Property="BorderThickness" Value="1" />
		</Style>

		<!--  Disabled State  -->
		<Style Selector="^:disabled">
			<Setter Property="Background" Value="{DynamicResource DisabledFieldColor}" />
			<Setter Property="Foreground" Value="{DynamicResource ForegroundColor4}" />
			
			<Style Selector="^ /template/ PathIcon#DropDownGlyph">
				<Setter Property="Foreground" Value="{DynamicResource ForegroundColor4}" />
			</Style>
		</Style>
	</ControlTheme>

</ResourceDictionary>